/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    images: Image;
    pages: Page;
    properties: Property;
    users: User;
    videos: Video;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    images: ImagesSelect<false> | ImagesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    properties: PropertiesSelect<false> | PropertiesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'home-page': HomePage;
    location: Location;
    navigation: Navigation;
  };
  globalsSelect: {
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
    location: LocationSelect<false> | LocationSelect<true>;
    navigation: NavigationSelect<false> | NavigationSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: number;
  caption: string;
  alternativeText: string;
  blurhash?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    'extra-large'?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  content?:
    | (
        | CarouselBlock
        | ContactFormBlock
        | ImagesBlock
        | MediaBlock
        | Panels
        | PartnershipsFormBlock
        | RichText
        | Sections
        | Timeline
      )[]
    | null;
  slug: string;
  slugLock?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock".
 */
export interface CarouselBlock {
  slides: {
    asset:
      | {
          relationTo: 'images';
          value: number | Image;
        }
      | {
          relationTo: 'videos';
          value: number | Video;
        };
    heading?: string | null;
    description?: string | null;
    buttons?:
      | {
          link: string;
          label: string;
          variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
          id?: string | null;
        }[]
      | null;
    isFullScreen?: boolean | null;
    width: string;
    id?: string | null;
  }[];
  width: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: number;
  slug: string;
  slugLock?: boolean | null;
  title: string;
  caption: string;
  muxPlaybackId: string;
  cover: number | Image;
  aspectRatio: string;
  isFeatured: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBlock".
 */
export interface ContactFormBlock {
  heading?: string | null;
  beforeText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  afterText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contact-form';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImagesBlock".
 */
export interface ImagesBlock {
  images?:
    | {
        image?: (number | null) | Image;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'images-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  asset:
    | {
        relationTo: 'images';
        value: number | Image;
      }
    | {
        relationTo: 'videos';
        value: number | Video;
      };
  heading?: string | null;
  description?: string | null;
  buttons?:
    | {
        link: string;
        label: string;
        variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
        id?: string | null;
      }[]
    | null;
  isFullScreen?: boolean | null;
  width: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'media';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Panels".
 */
export interface Panels {
  heading?: string | null;
  beforeText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  panels: {
    heading?: string | null;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    title?: string | null;
    nextToTitle?: string | null;
    byline?: string | null;
    items?:
      | {
          label?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
    moreDetails?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    buttons?:
      | {
          link: string;
          label: string;
          variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  afterText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  isFullScreen?: boolean | null;
  color: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'panels';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PartnershipsFormBlock".
 */
export interface PartnershipsFormBlock {
  heading?: string | null;
  beforeText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  afterText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'partnerships-form';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichText".
 */
export interface RichText {
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  isFullScreen?: boolean | null;
  color: string;
  width: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'rich-text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Sections".
 */
export interface Sections {
  sections: (CarouselBlock | MediaBlock | RichText)[];
  isFullScreen?: boolean | null;
  color: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'sections-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline".
 */
export interface Timeline {
  heading?: string | null;
  beforeText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  milestones?:
    | {
        title?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  afterText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'timeline';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties".
 */
export interface Property {
  id: number;
  slug: string;
  slugLock?: boolean | null;
  title: string;
  subtitle: string;
  startingPrice: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  media?:
    | {
        asset:
          | {
              relationTo: 'images';
              value: number | Image;
            }
          | {
              relationTo: 'videos';
              value: number | Video;
            };
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  role: 'General' | 'Marketer' | 'Administrator';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'images';
        value: number | Image;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'properties';
        value: number | Property;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'videos';
        value: number | Video;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  caption?: T;
  alternativeText?: T;
  blurhash?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        'extra-large'?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  content?:
    | T
    | {
        carousel?: T | CarouselBlockSelect<T>;
        'contact-form'?: T | ContactFormBlockSelect<T>;
        'images-block'?: T | ImagesBlockSelect<T>;
        media?: T | MediaBlockSelect<T>;
        panels?: T | PanelsSelect<T>;
        'partnerships-form'?: T | PartnershipsFormBlockSelect<T>;
        'rich-text'?: T | RichTextSelect<T>;
        'sections-block'?: T | SectionsSelect<T>;
        timeline?: T | TimelineSelect<T>;
      };
  slug?: T;
  slugLock?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock_select".
 */
export interface CarouselBlockSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        asset?: T;
        heading?: T;
        description?: T;
        buttons?:
          | T
          | {
              link?: T;
              label?: T;
              variant?: T;
              id?: T;
            };
        isFullScreen?: T;
        width?: T;
        id?: T;
      };
  width?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactFormBlock_select".
 */
export interface ContactFormBlockSelect<T extends boolean = true> {
  heading?: T;
  beforeText?: T;
  afterText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImagesBlock_select".
 */
export interface ImagesBlockSelect<T extends boolean = true> {
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  asset?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        link?: T;
        label?: T;
        variant?: T;
        id?: T;
      };
  isFullScreen?: T;
  width?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Panels_select".
 */
export interface PanelsSelect<T extends boolean = true> {
  heading?: T;
  beforeText?: T;
  panels?:
    | T
    | {
        heading?: T;
        description?: T;
        title?: T;
        nextToTitle?: T;
        byline?: T;
        items?:
          | T
          | {
              label?: T;
              description?: T;
              id?: T;
            };
        moreDetails?: T;
        buttons?:
          | T
          | {
              link?: T;
              label?: T;
              variant?: T;
              id?: T;
            };
        id?: T;
      };
  afterText?: T;
  isFullScreen?: T;
  color?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PartnershipsFormBlock_select".
 */
export interface PartnershipsFormBlockSelect<T extends boolean = true> {
  heading?: T;
  beforeText?: T;
  afterText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichText_select".
 */
export interface RichTextSelect<T extends boolean = true> {
  content?: T;
  isFullScreen?: T;
  color?: T;
  width?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Sections_select".
 */
export interface SectionsSelect<T extends boolean = true> {
  sections?:
    | T
    | {
        carousel?: T | CarouselBlockSelect<T>;
        media?: T | MediaBlockSelect<T>;
        'rich-text'?: T | RichTextSelect<T>;
      };
  isFullScreen?: T;
  color?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline_select".
 */
export interface TimelineSelect<T extends boolean = true> {
  heading?: T;
  beforeText?: T;
  milestones?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  afterText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties_select".
 */
export interface PropertiesSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  title?: T;
  subtitle?: T;
  startingPrice?: T;
  content?: T;
  media?:
    | T
    | {
        asset?: T;
        description?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  title?: T;
  caption?: T;
  muxPlaybackId?: T;
  cover?: T;
  aspectRatio?: T;
  isFeatured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: number;
  title: string;
  asset?:
    | ({
        relationTo: 'images';
        value: number | Image;
      } | null)
    | ({
        relationTo: 'videos';
        value: number | Video;
      } | null);
  arrowText?: string | null;
  content?:
    | (
        | Section01Block
        | Section02Block
        | Section03Block
        | Section04Block
        | Section05Block
        | Section06Block
        | Section07Block
        | Section08Block
        | Section09Block
        | Section10Block
        | Section11Block
        | Section12Block
        | Section13Block
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section01Block".
 */
export interface Section01Block {
  heading: string;
  subheading: string;
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  mediaBlockTwo: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-01-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionCarousel".
 */
export interface SectionCarousel {
  slides: {
    asset:
      | {
          relationTo: 'images';
          value: number | Image;
        }
      | {
          relationTo: 'videos';
          value: number | Video;
        };
    description?: string | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionMedia".
 */
export interface SectionMedia {
  asset:
    | {
        relationTo: 'images';
        value: number | Image;
      }
    | {
        relationTo: 'videos';
        value: number | Video;
      };
  description?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-media';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section02Block".
 */
export interface Section02Block {
  heading: string;
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-02-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section03Block".
 */
export interface Section03Block {
  heading: string;
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-03-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section04Block".
 */
export interface Section04Block {
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  copyTwo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-04-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section05Block".
 */
export interface Section05Block {
  heading: string;
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  copyTwo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-05-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section06Block".
 */
export interface Section06Block {
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  copyTwo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-06-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section07Block".
 */
export interface Section07Block {
  heading: string;
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-07-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section08Block".
 */
export interface Section08Block {
  heading: string;
  mediaBlockOne: (SectionCarousel | SectionMedia)[];
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  copyTwo: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-08-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section09Block".
 */
export interface Section09Block {
  heading: string;
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-09-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section10Block".
 */
export interface Section10Block {
  slides: {
    asset:
      | {
          relationTo: 'images';
          value: number | Image;
        }
      | {
          relationTo: 'videos';
          value: number | Video;
        };
    description?: string | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-10-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section11Block".
 */
export interface Section11Block {
  slides: {
    asset:
      | {
          relationTo: 'images';
          value: number | Image;
        }
      | {
          relationTo: 'videos';
          value: number | Video;
        };
    description?: string | null;
    id?: string | null;
  }[];
  heading: string;
  copyOne: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-11-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section12Block".
 */
export interface Section12Block {
  asset:
    | {
        relationTo: 'images';
        value: number | Image;
      }
    | {
        relationTo: 'videos';
        value: number | Video;
      };
  description?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-12-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section13Block".
 */
export interface Section13Block {
  slides: {
    asset:
      | {
          relationTo: 'images';
          value: number | Image;
        }
      | {
          relationTo: 'videos';
          value: number | Video;
        };
    description?: string | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'section-13-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "location".
 */
export interface Location {
  id: number;
  title: string;
  asset?:
    | ({
        relationTo: 'images';
        value: number | Image;
      } | null)
    | ({
        relationTo: 'videos';
        value: number | Video;
      } | null);
  arrowText?: string | null;
  content?:
    | (
        | Section01Block
        | Section02Block
        | Section03Block
        | Section04Block
        | Section05Block
        | Section06Block
        | Section07Block
        | Section08Block
        | Section09Block
        | Section10Block
        | Section11Block
        | Section12Block
        | Section13Block
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
  id: number;
  items?:
    | (
        | {
            link: string;
            label: string;
            isDisabled: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'link';
          }
        | Dropdown
      )[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Dropdown".
 */
export interface Dropdown {
  label: string;
  links: {
    link: string;
    label: string;
    description: string;
    isDisabled: boolean;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'dropdown';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  title?: T;
  asset?: T;
  arrowText?: T;
  content?:
    | T
    | {
        'section-01-block'?: T | Section01BlockSelect<T>;
        'section-02-block'?: T | Section02BlockSelect<T>;
        'section-03-block'?: T | Section03BlockSelect<T>;
        'section-04-block'?: T | Section04BlockSelect<T>;
        'section-05-block'?: T | Section05BlockSelect<T>;
        'section-06-block'?: T | Section06BlockSelect<T>;
        'section-07-block'?: T | Section07BlockSelect<T>;
        'section-08-block'?: T | Section08BlockSelect<T>;
        'section-09-block'?: T | Section09BlockSelect<T>;
        'section-10-block'?: T | Section10BlockSelect<T>;
        'section-11-block'?: T | Section11BlockSelect<T>;
        'section-12-block'?: T | Section12BlockSelect<T>;
        'section-13-block'?: T | Section13BlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section01Block_select".
 */
export interface Section01BlockSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  mediaBlockTwo?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionCarousel_select".
 */
export interface SectionCarouselSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        asset?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionMedia_select".
 */
export interface SectionMediaSelect<T extends boolean = true> {
  asset?: T;
  description?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section02Block_select".
 */
export interface Section02BlockSelect<T extends boolean = true> {
  heading?: T;
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section03Block_select".
 */
export interface Section03BlockSelect<T extends boolean = true> {
  heading?: T;
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section04Block_select".
 */
export interface Section04BlockSelect<T extends boolean = true> {
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  copyTwo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section05Block_select".
 */
export interface Section05BlockSelect<T extends boolean = true> {
  heading?: T;
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  copyTwo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section06Block_select".
 */
export interface Section06BlockSelect<T extends boolean = true> {
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  copyTwo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section07Block_select".
 */
export interface Section07BlockSelect<T extends boolean = true> {
  heading?: T;
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section08Block_select".
 */
export interface Section08BlockSelect<T extends boolean = true> {
  heading?: T;
  mediaBlockOne?:
    | T
    | {
        'section-carousel'?: T | SectionCarouselSelect<T>;
        'section-media'?: T | SectionMediaSelect<T>;
      };
  copyOne?: T;
  copyTwo?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section09Block_select".
 */
export interface Section09BlockSelect<T extends boolean = true> {
  heading?: T;
  copyOne?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section10Block_select".
 */
export interface Section10BlockSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        asset?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section11Block_select".
 */
export interface Section11BlockSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        asset?: T;
        description?: T;
        id?: T;
      };
  heading?: T;
  copyOne?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section12Block_select".
 */
export interface Section12BlockSelect<T extends boolean = true> {
  asset?: T;
  description?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Section13Block_select".
 */
export interface Section13BlockSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        asset?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "location_select".
 */
export interface LocationSelect<T extends boolean = true> {
  title?: T;
  asset?: T;
  arrowText?: T;
  content?:
    | T
    | {
        'section-01-block'?: T | Section01BlockSelect<T>;
        'section-02-block'?: T | Section02BlockSelect<T>;
        'section-03-block'?: T | Section03BlockSelect<T>;
        'section-04-block'?: T | Section04BlockSelect<T>;
        'section-05-block'?: T | Section05BlockSelect<T>;
        'section-06-block'?: T | Section06BlockSelect<T>;
        'section-07-block'?: T | Section07BlockSelect<T>;
        'section-08-block'?: T | Section08BlockSelect<T>;
        'section-09-block'?: T | Section09BlockSelect<T>;
        'section-10-block'?: T | Section10BlockSelect<T>;
        'section-11-block'?: T | Section11BlockSelect<T>;
        'section-12-block'?: T | Section12BlockSelect<T>;
        'section-13-block'?: T | Section13BlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  items?:
    | T
    | {
        link?:
          | T
          | {
              link?: T;
              label?: T;
              isDisabled?: T;
              id?: T;
              blockName?: T;
            };
        dropdown?: T | DropdownSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Dropdown_select".
 */
export interface DropdownSelect<T extends boolean = true> {
  label?: T;
  links?:
    | T
    | {
        link?: T;
        label?: T;
        description?: T;
        isDisabled?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}